
openapi: 3.1.0
info:
  title: BotCrafterController API
  version: 1.0.0
  description: Vollständiges OpenAPI-Schema der BotCrafterController-Anwendung.
servers:
  - url: https://botcraftercontroler-5317cefda72b.herokuapp.com/api
    description: Produktionsserver
  - url: http://localhost:5000
    description: Lokaler Entwicklungsserver
paths:
  /list-files:
    get:
      summary: Listet Dateien im Google Drive auf.
      parameters:
        - name: folder_id
          in: query
          required: false
          description: ID des Ordners im Google Drive.
          schema:
            type: string
      responses:
        200:
          description: Erfolgreiche Antwort mit Dateiliste.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
  /upload-file:
    post:
      summary: Lädt eine Datei in Google Drive hoch.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                mime_type:
                  type: string
                parent_folder_id:
                  type: string
      responses:
        201:
          description: Datei erfolgreich hochgeladen.
  /delete-file:
    delete:
      summary: Löscht eine Datei aus Google Drive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_id:
                  type: string
      responses:
        204:
          description: Datei erfolgreich gelöscht.
  /create-folder:
    post:
      summary: Erstellt einen neuen Ordner in Google Drive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder_name:
                  type: string
                parent_folder_id:
                  type: string
      responses:
        201:
          description: Ordner erfolgreich erstellt.
  /create-repo:
    post:
      summary: Erstellt ein neues GitHub-Repository.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo_name:
                  type: string
                private:
                  type: boolean
      responses:
        201:
          description: Repository erfolgreich erstellt.
  /list-repo-files:
    get:
      summary: Listet Dateien in einem GitHub-Repository auf.
      parameters:
        - name: owner
          in: query
          required: true
          description: GitHub-Besitzer des Repositories.
          schema:
            type: string
        - name: repo
          in: query
          required: true
          description: Name des GitHub-Repositories.
          schema:
            type: string
        - name: path
          in: query
          required: false
          description: Pfad innerhalb des Repositories.
          schema:
            type: string
      responses:
        200:
          description: Erfolgreiche Antwort mit Dateiliste.
  /upload-repo-file:
    post:
      summary: Lädt eine Datei in ein GitHub-Repository hoch.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
                file_path:
                  type: string
                commit_message:
                  type: string
                content:
                  type: string
      responses:
        201:
          description: Datei erfolgreich hochgeladen.
  /delete-repo-file:
    delete:
      summary: Löscht eine Datei aus einem GitHub-Repository.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
                file_path:
                  type: string
      responses:
        204:
          description: Datei erfolgreich gelöscht.
  /create-branch:
    post:
      summary: Erstellt einen neuen Branch in einem GitHub-Repository.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
                branch_name:
                  type: string
                source_branch:
                  type: string
      responses:
        201:
          description: Branch erfolgreich erstellt.
  /create-pull-request:
    post:
      summary: Erstellt einen Pull Request für ein GitHub-Repository.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
                title:
                  type: string
                head:
                  type: string
                base:
                  type: string
      responses:
        201:
          description: Pull Request erfolgreich erstellt.
  /list-repos:
    get:
      summary: Listet alle verfügbaren Repositories aus der Konfiguration auf.
      responses:
        200:
          description: Erfolgreiche Antwort mit Liste von Repository-Namen.
  /routes:
    get:
      summary: Listet alle verfügbaren Routen der API auf.
      responses:
        200:
          description: Erfolgreiche Antwort mit Liste von Routen.
